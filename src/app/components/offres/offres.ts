import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { Router } from '@angular/router';

@Component({
  selector: 'app-offres',
  standalone: true,
  imports: [CommonModule],
  templateUrl: './offres.html',
  styleUrls: ['./offres.css']
})
export class Offres implements OnInit {
  offres: any[] = [];
  loading = false;
  error: string | null = null;

  constructor(private http: HttpClient, private router: Router) { }

  ngOnInit(): void {
    this.chargerOffres();
  }

  chargerOffres(): void {
    this.loading = true;
    this.error = null;

    this.http.get<any[]>('http://192.168.1.196:5000/api/Offre').subscribe({
      next: res => {
        this.offres = res;
        this.loading = false;
      },
      error: err => {
        this.error = 'Impossible de charger les offres.';
        this.loading = false;
      }
    });
  }

  ajouterAuPanier(offre: any): void {
    const user = localStorage.getItem('user');

    // ‚úÖ Si l'utilisateur n'est pas connect√©
    if (!user) {
      const aUnCompte = confirm(
        "‚ö†Ô∏è Vous devez √™tre connect√© pour ajouter une offre au panier.\n\n" +
        "Avez-vous d√©j√† un compte ?\n\n" +
        "üëâ S√©lectionner OK si OUI\n" +
        "üëâ S√©lectionner Annuler pour cr√©er un compte"
      );

      if (aUnCompte) {
        // Redirection vers la page de connexion
        localStorage.setItem('pendingOffer', JSON.stringify(offre));
        this.router.navigate(['/connexion']);
      } else {
        // Redirection vers la page d‚Äôinscription
        localStorage.setItem('pendingOffer', JSON.stringify(offre));
        this.router.navigate(['/inscription']);
      }

      return;
    }

    // ‚úÖ Si l'utilisateur est connect√©
    this.ajouterOffreDansPanier(offre);
  }

  ajouterOffreDansPanier(offre: any): void {
    // On r√©cup√®re le panier existant ou on le cr√©e
    const panier = JSON.parse(localStorage.getItem('panier') || '[]');

    // V√©rifie si l'offre existe d√©j√†
    const existe = panier.find((item: any) => item.idOffre === offre.idOffre);
    if (!existe) {
      panier.push(offre);
      localStorage.setItem('panier', JSON.stringify(panier));
      alert(`‚úÖ "${offre.nomOffre}" a √©t√© ajout√© au panier.`);
    } else {
      alert(`‚ÑπÔ∏è "${offre.nomOffre}" est d√©j√† dans votre panier.`);
    }
  }
}
